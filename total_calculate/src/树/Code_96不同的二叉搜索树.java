package 树;

/**
*       题目：给你一个整数 n ，求恰由 n 个节点组成且节点值从 1 到 n 互不相同的 二叉搜索树 有多少种？返回满足题意的二叉搜索树的种数。
 *      输入：n = 3
 *      输出：5
 *
 *      输入：n = 1
 *      输出：1
* */

/*
*       题解：此题类似于两层动规嵌套，两两依存，假设存在n个节点，此时二叉树的种类为G(n),令f(i)表示以i为根（即从头至尾第几个节点为根）
*       二叉树的个数，则G(n) = f(1) + f(2) + …… +f(n);
*       当i为根节点时，其左子树个数为 i - 1个，其右子树个数为 n - i,则，f(i) = G(i - 1) * G(n - i);
*       结合两个公式得：G(n)=G(0)∗G(n−1)+G(1)∗(n−2)+...+G(n−1)∗G(0);
*       我们定义dp数组表示G方法，用于记录动规结果，初始化dp[0] = 1, dp[1] = 1,表示存在0或者1个节点时二叉树的构造形式只有一种可能。
*
* */

public class Code_96不同的二叉搜索树 {
    public int numTrees(int n) {
        int[] dp = new int[n + 1];
        dp[0] = 1;
        dp[1] = 1;

        for(int i = 2; i <= n; i++) {
            for(int j = 1; j <= i; j++) {
                dp[i] += dp[j - 1] * dp[i - j];
            }
        }
        return dp[n];
    }
}
